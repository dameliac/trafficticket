package TrafficTicket;

import javax.swing.table.DefaultTableModel; 
import javax.swing.JFrame;
import javax.swing.JTable;

import java.util.ArrayList;

/**
 *
 * @author Damelia Coleman
 */
public class OffenderView extends JFrame {
     // Variables declaration - do not modify                     
     private javax.swing.JTable Table;
     private javax.swing.JScrollPane jScrollPane1;
     private javax.swing.JPanel jPanel1;
     private JFrame frame;
     private DefaultTableModel model;
     private ArrayList<Ticket> tlist;
     private OffenderLogin offender;
     private javax.swing.JButton Exit;
     
     // End of variables declaration    

    /**
     * Creates new form OffenderView
     */
    public OffenderView(OffenderLogin offender) {
        initComponents(offender);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents(OffenderLogin offender) {
        this.offender = offender;
        frame = new JFrame();
        frame.setSize(500, 500);
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        Exit = new javax.swing.JButton();
        dataManager dManager = new dataManager();
        tlist = dManager.loadTickets("./docs/tickets.txt");
        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        String [] column = {
            "Ticket Type", "Date Received", "Court Date", "Balance"
        };
        model = (new DefaultTableModel(column, 0));
        Table = new JTable(model);
        showTable(offender.getOffenderName(),tlist);
        jScrollPane1.setViewportView(Table);

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Exit)
                .addGap(161, 161, 161))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Exit)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        frame.getContentPane().add(jPanel1);
        frame.setVisible(true);
    }// </editor-fold>  
    
    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
         frame.setVisible(false);
    }  

    public void addToTable(String name, Ticket t) //adds one ticket to the table.
    {
        if (name.equals(t.getTicketHolder().getName())){
            String[] item={t.getTicketID(),""+ t.getdaTeRecieved(),""+t.getcourtDate(),""+ t.calcFee()};
            model.addRow(item);       

        }
        
       
    }

    private void showTable(String name, ArrayList<Ticket> tlist) //displays a list of tickets in a table.
    { 
       if (tlist.size()>0)
       {
        for (int i = 0; i< tlist.size(); i++)
        {
            addToTable(name, tlist.get(i)); //adds one ticket at a time to the table.
        }
       }

    }
                  
}
